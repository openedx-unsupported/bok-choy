v1.0.1 (10/25/19)
* Fix saving of test failure artifacts under Python 3
* Make the saving of page source more robust to missing directories, log problems doing it

v1.0.0 (04/17/19)
* Bump axe-core dependency from 1.1 to 3.2.2

v0.9.3 (02/14/19)
* PageLoadError and WrongPageError now inherit WebDriverException so
  they can trigger retries instead of immediately failing tests

v0.9.2 (11/20/18) (0.9.1 skipped due to PyPI deployment issue)
* Support passing additional desired capabilities to remote WebDriver instances.

v0.9.0 (08/09/18)
* Make Needle an optional dependency; everything except visual diffs works without it, nose, and pillow

v0.8.1 (08/01/18)
* Support use of headless Chrome and Firefox by setting the BOKCHOY_HEADLESS environment variable to "true"
* Only try to save logs which are available for the browser in use

v0.8.0 (07/18/18)
* Preserve geckodriver log for Firefox test failures
* Better handling of screenshot and log directory settings
* Log more information on page load failures
* Python 3.6 support

v0.7.3 (05/21/18)
* Modified wait for page logic

v0.7.2 (04/02/18)
* Disable selenium webdriver logging for firefox
* Update selenium to 3.11.0 and geckodriver to 0.20
* Doc improvements

v0.7.1 (06/16/17)
* Avoid second browser window resize when the dimensions are unchanged
* Disable the JSON Viewer in Firefox 53+

v0.7.0 (04/12/17)
* Support selenium 3.x
* Support new FireFox version (with geckodriver)
* Update Needle to 0.5.0
* Catch WebDriverExceptions while waiting for PageObject conditions
* Miscellaneous cleanup

v0.6.2 (02/15/17)
* Update Needle version
* Run tests in parallel
* Improvement in speed and network usage with Firefox default settings
* Add the ability to save the Firefox log

v0.6.1 (12/19/16)
* Add support for programmatic customization of the Firefox profile preferences
* edX best practices - Update doc theme; add yaml file for OEP2 compliance tracking
* Improve linting and test execution

v0.6.0 (06/17/16)
* Support Python 3
* Use pytest to run tests
* Save browser page source on failure
* Allow configuration of the firefox profile
* Upgrade dependencies, improve test coverage

v0.5.4 (06/16/16)
* Remove browsermobproxy and HAR capture feature
* Add ability to save browser page source to disk
* Update from pep8 to pycodestyle
* Clean up requirements and setup.py, start using tox
* Build and distribute wheels

v0.5.3 (06/07/16)
* Updated the a11y-custom-rules output to include the severity of the a11y failure
* Added Chris Rodriguez to AUTHORS file

v0.5.2 (04/25/16)
* Support Opera browser
* Improve browser instantiation logic to include retries

v0.5.1 (03/28/16)
* Bug fix to XSS vulnerability auditing feature

v0.5.0 (3/22/16)
* Implement feature for XSS (cross-site scripting) vulnerability auditing
* Added `scroll_to_element(element_selector)`
* Make browser instantiation more resilient to transient webdriver failures
* Disable default promo tabs on firefox profile
* Updates for contributors (i.e. we use Slack now, not IRC)
* Various improvements for how the bok-choy repo itself is tested
* Python version compatibility improvements

v0.4.11 (n/a)
* Skipped this release version due to infrastructure udpate (i.e., not releasing via Travis)

v0.4.10 (01/21/16)
* No changes. Infrastructure updates.

v0.4.9 (01/20/16)
* Ability to release to pypi via Travis

v0.4.8 (01/19/16)
* Improved check for custom rules file format [a11y rules]
* Use docker for Travis builds, some fixed linting
* Capability for custom firefox path using the SELENIUM_FIREFOX_PATH environment variable

v0.4.7 (10/22/15)
* Added BrowserQuery is_focused method and focused property
* Ability to include custom rules in an axe-core accessibility audit

v0.4.6 (10/07/15)
* Allow A11yAudits to run on browsers other than phantomjs

v0.4.5 (09/29/15)
* Fix for generating a11y API documentation.

v0.4.4 (09/28/15)
* Added check the loading state of the document in wait_for_page to reduce flakiness due to synchronization/timing in tests.
* Refactored accesibility auditing feature. Two accessibility auditing rulesets now available: axe-core ruleset (default) and google's accessibility dev tools ruleset.
* Update browsermob proxy version to the latest

v0.4.3 (07/08/15)
* Bugfix in wait_for_ajax to check that jQuery is defined

v0.4.2 (06/25/15)
* Implement distinction between an element being invisible vs not-present

v0.4.1 (06/23/15)

* Fix a bug in the packaging of the accessibility JS file
* Documentation improvements

v0.4.0 (06/12/15)

* Implement visual diff testing with Needle
* Implement a11y testing with PhantomJS and Google Chrome Accessibility Developer Tools
* Small clarity edits for the tutorial
* Fix all pylint errors and enable linting in CI

v0.3.4 (05/13/15)

* URLs can contain basic auth credentials
* Small bug fixes

v0.3.3 (03/31/15)

* Changed license from AGPL to Apache
* Unpinned selenium version
* Bypass the security prompt when accessing a media device in FF
* Support faking media device access in Chrome
* Small bug fixes and improvements

v0.3.2 (10/7/14)

* Update selenium version to 2.42.1
* Save selenium driver logs on error
* Add capability for capturing HAR files of network traffic
* Do not take auto screenshots for skipped tests
* Add timeout in wait helpers
* Small bug fixes

v0.3.1 (7/16/14)

* Added docs for test-writing guidelines.
* Unguard q method
* Add a test with an example of a filtered query on a page
* Add a test with an even more complex selector method as a good example
* Add wait for ajax command to page object
* When visiting a page, give it some time to get there
* Minor improvements to Bok Choy failure messages
* Added test for timeout on PageObject visit method
* Extended the lines of code to show for round 3 of the search results
* Fix all function issue
* Wait Helpers for PageObject
* Adjusted .sh script for killing child processes.

v0.3.0 (2/19/14)

* Deprecated css_* methods in favor of queries
* Deprecated fulfill_before and fulfill_after in favor of Promise.fulfill()
* Replaced Splinter dependency direct Selenium calls
* Deprecate SubQuery in favor of XPath queries.
* Added query methods to check element visibility.
* Added query method for retrieving the "nth" element.
* Updated API documentation, using Sphinx keywords for all public methods.


v 0.2.1 (2/12/14)

* Bugfix: Make SubQueries inside Queries work with the repr function
* Bugfix: Make classes stored as class attributes on PageObjects always be unguarded
    (despite technically being callable).

v 0.2.0 (2/11/14)

* Added query interface for interacting with the browser

v 0.1.0 (1/23/14)

* Added tests for documentation examples
* Removed WebAppUI
* Refocused design on PageObjects, rather than on the WebAppUI
* Pages now can reference other pages using `self.ui`
* Added tests for page interactions
